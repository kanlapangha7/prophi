// ========================================
// ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á
// ========================================

function setupPoseDetection() {
    if (!checkDependencies()) return;

    try {
        poseDetection = new window.Pose({
            locateFile: (file) => {
                return `https://cdn.jsdelivr.net/npm/@mediapipe/pose@0.5.1635988162/${file}`;
            }
        });

        // ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
        poseDetection.setOptions({
            modelComplexity: 1,          // ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô
            smoothLandmarks: true,       // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏∏‡πà‡∏°‡∏ô‡∏ß‡∏•
            enableSegmentation: false,   // ‡∏õ‡∏¥‡∏î segmentation
            minDetectionConfidence: 0.7, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥
            minTrackingConfidence: 0.6,  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£
            selfieMode: false            // ‡πÇ‡∏´‡∏°‡∏î‡∏õ‡∏Å‡∏ï‡∏¥
        });

        poseDetection.onResults(onPoseResults);

        // ‡∏•‡∏î frame rate ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£
        let lastProcessTime = 0;
        const PROCESS_INTERVAL = 100; // ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ó‡∏∏‡∏Å 100ms

        camera = new window.Camera(videoElement, {
            onFrame: async () => {
                const now = Date.now();
                if (isDetecting && poseDetection && (now - lastProcessTime) > PROCESS_INTERVAL) {
                    lastProcessTime = now;
                    await poseDetection.send({ image: videoElement });
                }
            },
            width: 640,
            height: 480
        });

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏° error handling
        camera.start()
            .then(() => {
                console.log('‚úÖ ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                updateStartButton(true);
                setTimeout(setupCameraCanvas, 500); // ‡∏£‡∏≠‡πÉ‡∏´‡πâ video ‡∏û‡∏£‡πâ‡∏≠‡∏°
            })
            .catch(error => {
                console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ:', error);
                showError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå');
            });

    } catch (error) {
        console.error('‚ùå Error ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MediaPipe:', error);
        showError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á');
    }}

function onPoseResults(results) {
    if (!isDetecting) return;

    poseResults = results;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Ç‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    if (results.poseLandmarks) {
        autoDetectedSide = detectBestSideAutomatically(results.poseLandmarks);
        updateSideIndicator();
    }

    drawPoseResults();
    analyzeCurrentExercise();
}

function analyzeCurrentExercise() {
    if (!poseResults || !poseResults.poseLandmarks) return;

    switch (currentExercise) {
        case 'butterfly-dance':
            analyzeArmRaise();
            break;
        case 'peacock':
            analyzeElbowFlexion();
            break;
        case 'dragon-claw':
            analyzeWristMovement();
            break;
        case 'tiger-roar':
            analyzeKneeSpread();
            break;
        case 'flying':
            analyzeLegRaise();
            break;
        default:
            showFeedback('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á');
    }
}
// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô analyzeCurrentExercise
console.log('Current exercise:', currentExercise);
console.log('typeof analyzeCurrentExercise:', typeof analyzeCurrentExercise);

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á switch case
function testAnalyzeCurrentExercise() {
    console.log('=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö analyzeCurrentExercise ===');
    
    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡πà‡∏≤‡∏¢‡∏Å‡∏Ç‡∏≤
    currentExercise = 'flying';
    console.log('‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô currentExercise ‡πÄ‡∏õ‡πá‡∏ô:', currentExercise);
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ analyzeCurrentExercise
    if (typeof analyzeCurrentExercise === 'function') {
        console.log('üîç ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ analyzeCurrentExercise...');
        try {
            analyzeCurrentExercise();
        } catch (error) {
            console.error('‚ùå Error ‡πÉ‡∏ô analyzeCurrentExercise:', error);
        }
    } else {
        console.log('‚ùå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô analyzeCurrentExercise ‡πÑ‡∏°‡πà‡∏û‡∏ö');
    }
}

// ‡∏£‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testAnalyzeCurrentExercise();